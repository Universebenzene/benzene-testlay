--- a/lib/repoman/argparser.py	2024-07-08 12:55:53.038111811 +0800
+++ b/lib/repoman/argparser.py	2024-07-08 13:03:18.190549181 +0800
@@ -219,7 +219,7 @@
 	opts = parser.parse_args(argv[1:])
 
 	if not opts.ignore_default_opts:
-		default_opts = util.shlex_split(repoman_default_opts)
+		default_opts = util.shlex.split(repoman_default_opts)
 		if default_opts:
 			opts = parser.parse_args(default_opts + argv[1:])
 
--- a/lib/repoman/gpg.py	2021-03-28 10:23:28.088698000 +0800
+++ b/lib/repoman/gpg.py	2024-07-08 13:03:18.190549181 +0800
@@ -44,7 +44,7 @@
 		print("(" + gpgcmd + ")")
 	else:
 		# Encode unicode manually for bug #310789.
-		gpgcmd = portage.util.shlex_split(gpgcmd)
+		gpgcmd = portage.util.shlex.split(gpgcmd)
 
 		gpgcmd = [
 			_unicode_encode(arg, encoding=_encodings['fs'], errors='strict')
--- a/lib/repoman/_subprocess.py	2021-03-28 10:23:28.088698000 +0800
+++ b/lib/repoman/_subprocess.py	2024-07-08 13:03:18.190549181 +0800
@@ -14,7 +14,7 @@
 	Implements an interface similar to getstatusoutput(), but with
 	customized unicode handling (see bug #310789) and without the shell.
 	"""
-	args = portage.util.shlex_split(cmd)
+	args = portage.util.shlex.split(cmd)
 
 	encoding = _encodings['fs']
 	args = [
@@ -38,7 +38,7 @@
 	__slots__ = ('_proc', '_stdout')
 
 	def __init__(self, cmd):
-		args = portage.util.shlex_split(cmd)
+		args = portage.util.shlex.split(cmd)
 
 		encoding = _encodings['fs']
 		args = [
--- a/lib/repoman/utilities.py	2021-03-28 10:23:28.093697800 +0800
+++ b/lib/repoman/utilities.py	2024-07-08 13:03:18.190549181 +0800
@@ -150,7 +150,7 @@
 def editor_is_executable(editor):
 	"""
 	Given an EDITOR string, validate that it refers to
-	an executable. This uses shlex_split() to split the
+	an executable. This uses shlex.split() to split the
 	first component and do a PATH lookup if necessary.
 
 	@param editor: An EDITOR value from the environment.
@@ -158,7 +158,7 @@
 	@rtype: bool
 	@return: True if an executable is found, False otherwise.
 	"""
-	editor_split = util.shlex_split(editor)
+	editor_split = util.shlex.split(editor)
 	if not editor_split:
 		return False
 	filename = editor_split[0]
@@ -270,7 +270,7 @@
 	if location[-1] != "/":
 		location += "/"
 
-	for overlay in portage.util.shlex_split(settings["PORTDIR_OVERLAY"]):
+	for overlay in portage.util.shlex.split(settings["PORTDIR_OVERLAY"]):
 		overlay = os.path.realpath(overlay)
 		try:
 			s = os.stat(overlay)
